tidy_stems %>%
group_by(year) %>%
filter(between(year, 2016, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
# geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_wrap(~ year, ncol = 2, scales = "free") +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2016, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
# geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year, ncol = 2) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2016, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year, ncol = 2) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2016, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2016, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, color=year)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
# scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
#scale_fill_gradient(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col(scale_fill_gradient(low="aquamarine3", high="midnightblue")) +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2018, 2022)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
# ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top words by Publication Year",
x = "Stem word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
# ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top Words by Publication Year",
x = "Stem Word",
y = "Frequency") +
theme(text = element_text(size = 8, family="Kohinoor Devanagari")) +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
# ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top Words by Publication Year",
x = "Stem Word",
y = "Frequency") +
theme(text = element_text(size = 10, family="Kohinoor Devanagari")) +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
# ggsave("WordCountYear.png", width = 7, height = 5)
View(rawcustom)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top Words by Publication Year",
x = "Stem Word",
y = "Frequency",
labs="Year") +
theme(text = element_text(size = 10, family="Kohinoor Devanagari")) +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
# ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year, show.legend = FALSE) +
labs(title="Top Words by Publication Year",
x = "Stem Word",
y = "Frequency") +
theme(text = element_text(size = 10, family="Kohinoor Devanagari")) +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top Words by Publication Year",
x = "Stem Word",
y = "Frequency") +
theme(text = element_text(size = 10, family="Kohinoor Devanagari"), legend.position="none") +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
# ggsave("WordCountYear.png", width = 7, height = 5)
tidy_stems %>%
group_by(year) %>%
filter(between(year, 2017, 2021)) %>% #graphs are easier to read in 6 year intervals, change this part to reflect different years#
count(stem, sort = TRUE) %>%
select(stem, n) %>%
top_n(10, n) %>%
slice(1:10) %>%
ggplot(mapping = aes(x=reorder(stem, n), y = n, fill=year)) + #, fill=year
geom_col() +
#scale_fill_gradient2(low="aquamarine3", high="midnightblue") +
# geom_col(scale_fill_gradient2(low="aquamarine3", high="midnightblue")) +
facet_grid(~ year) +
labs(title="Top Words by Publication Year",
x = "Stem Word",
y = "Frequency") +
theme(text = element_text(size = 10, family="Kohinoor Devanagari"), legend.position="none") +
scale_fill_gradient(low="aquamarine3", high="midnightblue") +
coord_flip()
ggsave("WordCountYear.png", width = 7, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggsave("wordcloud.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggsave("wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggsave("wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
cloud <- wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggsave(cloud, "wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggplot2::ggsave(cloud, "wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari") %>%
ggplot2::ggsave("wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggplot2::ggsave("wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
png(filename = "plot3.png", width = 6, height = 4, units = "in", res = 300)
# ggplot2::ggsave("wordclouddog.png", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
png(filename = "plot3.png", width = 6, height = 4, units = "in", res = 300)
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
# ggplot2::ggsave("wordclouddog.png", width = 5, height = 5)
View(mostpublished)
knitr::opts_chunk$set(echo = TRUE)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
library(tidyverse)
library(Hmisc)
library(dplyr)
library(ggplot2)
library(ggridges) # for ridgeplot
library(viridis)
library(countrycode)
library(maps)
library(extrafont)
library(stringr)        # text cleaning and regular expressions
library(tidytext)       # provides additional text mining functions
library(wordcloud)
library(widyr)
library(SnowballC) # This is stemming in NLP
library(igraph) # For network graphs
library(ggraph)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
print(count(top10pub$Count)/78)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
count(top10pub$Count)/78
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
count(top10pub$Count)/int(78)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
count(top10pub$Count)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
sum(top10pub$Count)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
sum(top10pub$Count)/312
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
round(sum(top10pub$Count)/312, 2)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The percent of articles included in the top 10 is:")
round(sum(top10pub$Count)/312*100, 2)
top10pub <- mostpublished %>%
rename("Count" = "n", "Journal" = "journal") %>%
arrange(desc(Count)) %>%
head(10)
print(top10pub)
# write.csv(top10pub,"Top10Publishers.csv")
print("The number of articles included in the top 10 is:")
sum(top10pub$Count)
print("The percent of articles included in the top 10 is:")
round(sum(top10pub$Count)/312*100, 2)
View(tidy_stems)
