filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8) +
theme_void()
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="turquoise3") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8) +
theme_void()
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8) +
theme_void()
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "midnightblue", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "aquamarine4", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "aquamarine4", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "aquamarine4", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8, size = 10) +
theme_void()
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8, size = 8) +
theme_void()
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8, size = 8) +
theme_void()
ggsave("Network_article.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE) +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="serif") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="arial") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="courier") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="arial") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 4)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 5)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_Words.jpeg", width = 3, height = 5)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_Words.jpeg", width = 5, height = 3)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari", size = 7) +
theme_void()
ggsave("Network_article.jpeg", width = 5, height = 5)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_article.jpeg", width = 5, height = 5)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_article.jpeg", width = 6, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggsave("wordcloud.jpeg", width = 5, height = 5)
stemcloud <- abstracts_stems %>%
count(stem, name='freq', sort=TRUE) # how many articles mention X word
wordcloud(words = stemcloud$stem, freq = stemcloud$freq, min.freq = 5, max.words=100, random.order=FALSE, rot.per=0.35, colors=brewer.pal(8, "Dark2"), family="Kohinoor Devanagari")
ggsave("wordcloud.jpeg", width = 5, height = 5)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_article.png", width = 6, height = 5)
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
scale_fill_gradient(name="Count of articles", low="aquamarine3", high="midnightblue", na.value="snow4") +
labs(
title = "Map of Included Articles by Country",
subtitle = "Count of articles published by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold", family="Kohinoor Devanagari"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
ggsave("PublicationMap.jpeg", width = 8, height = 4)
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
scale_fill_gradient(name="Count", low="aquamarine3", high="midnightblue", na.value="snow4") +
labs(
title = "Map of Included Articles by Country",
subtitle = "Article count by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold", family="Kohinoor Devanagari"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
ggsave("PublicationMap.jpeg", width = 8, height = 4)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
family="Kohinoor Devanagari"
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
scale_fill_gradient(name="Count", low="aquamarine3", high="midnightblue", na.value="snow4") +
labs(
title = "Map of Included Articles by Country",
subtitle = "Article count by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold", family="Kohinoor Devanagari"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
ggsave("PublicationMap.png", width = 7, height = 4)
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
scale_fill_gradient(name="Count", low="aquamarine3", high="midnightblue", na.value="snow4") +
labs(
title = "Map of Included Articles by Country",
subtitle = "Article count by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold", family="Kohinoor Devanagari"),
legend.title=element_text(size=10, family="Kohinoor Devanagari"),
legend.text=element_text(size=9, family="Kohinoor Devanagari"))
globemap2
ggsave("PublicationMap.png", width = 7, height = 4)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
# caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 5, height = 3)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
# caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.png", width = 5, height = 3)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
# caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.png", width = 5, height = 5)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
# caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.png", width = 5, height = 4)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
# caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.png", width = 7, height = 6)
tidy_stems %>%
group_by(stem) %>%
filter(n() >= 20) %>%
pairwise_cor(stem, key) %>%
filter(!is.na(correlation),
correlation > .5) %>%
graph_from_data_frame() %>%
ggraph(layout = "fr") +
geom_edge_link(aes(edge_alpha = correlation), show.legend = FALSE) +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), repel = TRUE, family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_Words.png", width = 5.3, height = 3)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "turquoise4", fill = "aquamarine3") +
geom_vline(aes(xintercept = median(year)), color = "midnightblue", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "midnightblue", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "midnightblue", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Article Publication by Year",
subtitle = "From 1966 to May 2022",
# caption = "Articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published",
family="Kohinoor Devanagari"
) +
theme_classic()
ggsave("PubbyYear.png", width = 5, height = 4)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari") +
theme_void()
ggsave("Network_article.png", width = 7, height = 5)
knitr::opts_chunk$set(echo = TRUE)
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari") +
labs(title="Stem Word Relations by Article",
x = NULL,
y = "Frequency") +
theme_void()
library(tidyverse)
library(Hmisc)
library(dplyr)
library(ggplot2)
library(ggridges) # for ridgeplot
library(viridis)
library(countrycode)
library(maps)
library(extrafont)
library(stringr)        # text cleaning and regular expressions
library(tidytext)       # provides additional text mining functions
library(wordcloud)
library(widyr)
library(SnowballC) # This is stemming in NLP
library(igraph) # For network graphs
library(ggraph)
tidy_words <- abstracts %>%
unnest_tokens(output=word, input=abstract) %>%  # each word in its own row
anti_join(stop_words, by='word') %>%  # anti join gets rid of any match of things to the stop words list
filter(str_detect(word, "[:alpha:]"))  # makes sure words are used (alpha for alphabetical)
tidy_stems <- tidy_words %>%
mutate(stem = wordStem(word, language = "en")) # mutate the data to replace the word with the stem of the word
# write_csv(tidy_stems, path = "RayyanExport06022023/tidy_stem_words.csv")
word_cooccurences %>%
filter(n >= 90) %>%
graph_from_data_frame() %>%
ggraph(layout = "stress", circular = TRUE) +
geom_edge_link(aes(edge_alpha = n, edge_width = n), color="snow4") +
geom_node_point(color = "aquamarine3", size = 5) +
geom_node_text(aes(label = name), vjust = 1.8,family="Kohinoor Devanagari") +
labs(title="Stem Word Relations by Article",
x = NULL,
y = "Frequency") +
theme_void()
ggsave("Network_article.png", width = 7, height = 5)
