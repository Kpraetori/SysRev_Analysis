color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
# color='Correlation Strength'
# caption = "Caption if needed",
# x = "Number of Articles that Use the Same Word",
# y = "Count of Unique Words"
) +
theme_graph()
# ggsave("UniqueWordCount.pdf", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), colour = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name),
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
# color='Correlation Strength'
# caption = "Caption if needed",
# x = "Number of Articles that Use the Same Word",
# y = "Count of Unique Words"
) +
theme_graph()
ggsave("UniqueWordCount.pdf", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), colour = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name),
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.pdf", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), colour = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name),
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.jpeg", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), colour = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name), repel=T,
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.jpeg", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), low="aquamarine3", high = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name), repel=T,
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.jpeg", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), color = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name), repel=T,
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.jpeg", width = 8, height = 6)
col <- c("aquamarine", "aquamarine3", "turquoise4", "darkblue", "midnightblue")
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), color = col) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name), repel=T,
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
col <- c("aquamarine", "aquamarine3", "turquoise4", "darkblue", "midnightblue")
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), color = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name), repel=T,
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.jpeg", width = 8, height = 6)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout = 'linear', circular = TRUE) +
geom_edge_arc(aes(color = factor(correlation))) +
scale_edge_width(range = c(0.2, 2)) +
scale_color_manual(values=c("aquamarine3","midnightblue")) +
geom_node_label(aes(label=name),
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#  geom_node_text(aes(label=name), size = 2) +
theme_graph()
View(articles_mention_words)
articles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(key > 1) # words mentioned more than once
articles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 1) # words mentioned more than once
# so 31 is ten percent of the papers
toparticles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 78) # words mentioned more than 10 percent of papers Change filter to 31 for top 90 percent, 78 for 75, 156 for 50
ggplot(articles_mention_words, aes(ArticleCount)) +
geom_histogram(bins=40,color = "aquamarine3", fill = "midnightblue") +
labs(
title = "Unique Words Among Articles",
subtitle = "How similar are words used across articles?",
# caption = "Caption if needed",
x = "Number of Articles that Use the Same Word",
y = "Count of Unique Words"
)
ggsave("UniqueWordCount.jpeg", width = 6, height = 4)
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout = 'linear', circular = TRUE) +
geom_edge_arc(aes(color = factor(correlation))) +
scale_edge_width(range = c(0.2, 2)) +
scale_color_manual(values=c("aquamarine3","midnightblue")) +
geom_node_label(aes(label=name),
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#  geom_node_text(aes(label=name), size = 2) +
theme_graph()
col <- c("aquamarine", "aquamarine3", "turquoise4", "darkblue", "midnightblue")
graph_from_data_frame(d=abs_word_relate,
vertices = toparticles_mention_words %>%
semi_join(abs_word_relate, by= c("word" = "item1"))) %>% # remove words not connected
ggraph(layout="graphopt") +
geom_edge_link(aes(alpha = correlation), color = "midnightblue") +
scale_edge_width(range = c(0.2, 2)) +
geom_node_label(aes(label=name), repel=T,
color = "midnightblue",          # text
fill = "aquamarine3",         # label background
size = 3,                 # font size
label.r = unit(2, "pt"), # corner radius of label box
label.size = .1,          # label border size
label.padding = unit(.2, "lines")) +
#geom_node_text(aes(label=name), size = 4, color="black", repel=T) +
labs(
title = "Correlation between Words",
subtitle = "Relationship of top 75% most used words",
) +
theme_graph()
ggsave("CorrelationWords.jpeg", width = 8, height = 6)
articles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 1) # words mentioned more than once %>%
arrange(desc(ArticleCount)) %>%
# so 31 is ten percent of the papers
write.csv(articles_mention_words,"ArticleMentionWords_MoreThanOnce.csv")
articles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 1) # words mentioned more than once %>%
arrange(desc("ArticleCount")) %>%
# so 31 is ten percent of the papers
write.csv(articles_mention_words,"ArticleMentionWords_MoreThanOnce.csv")
articles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 1) # words mentioned more than once %>%
# so 31 is ten percent of the papers
write.csv(articles_mention_words,"ArticleMentionWords_MoreThanOnce.csv")
toparticles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 78) # words mentioned more than 10 percent of papers Change filter to 31 for top 90 percent, 78 for 75, 156 for 50
ggplot(articles_mention_words, aes(ArticleCount)) +
geom_histogram(bins=40,color = "aquamarine3", fill = "midnightblue") +
labs(
title = "Unique Words Among Articles",
subtitle = "How similar are words used across articles?",
# caption = "Caption if needed",
x = "Number of Articles that Use the Same Word",
y = "Count of Unique Words"
)
ggsave("UniqueWordCount.jpeg", width = 6, height = 4)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20,color = "aquamarine4", fill = "midnightblue") +
geom_vline(aes(xintercept = median(year)), color = "thistle4", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "thistle3", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "thistle3", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
articles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 1) # words mentioned more than once %>%
# so 31 is ten percent of the papers
write.csv(articles_mention_words,"ArticleMentionWords_MoreThanOnce.csv")
toparticles_mention_words <- abstracts_words %>%
count(word, name='ArticleCount') %>% # how many articles mention X word
filter(ArticleCount > 78) # words mentioned more than 10 percent of papers Change filter to 31 for top 90 percent, 78 for 75, 156 for 50
ggplot(articles_mention_words, aes(ArticleCount)) +
geom_histogram(bins=60,color = "aquamarine3", fill = "midnightblue") +
labs(
title = "Unique Words Among Articles",
subtitle = "How similar are words used across articles?",
# caption = "Caption if needed",
x = "Number of Articles that Use the Same Word",
y = "Count of Unique Words"
)
ggsave("UniqueWordCount.jpeg", width = 6, height = 4)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "midnightblue", fill = "aquamarine4")) +
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "midnightblue", fill = "aquamarine4") +
geom_vline(aes(xintercept = median(year)), color = "thistle4", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "thistle3", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "thistle3", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "midnightblue", fill = "aquamarine4") +
geom_vline(aes(xintercept = median(year)), color = "turquoise", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "turquoise3", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "turquoise3", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
) +
theme_classic()
# ggsave("PubbyYear.pdf", width = 8, height = 5)
ggplot(tidierincluded, aes(year)) +
geom_histogram(bins=20, color = "midnightblue", fill = "aquamarine4") +
geom_vline(aes(xintercept = median(year)), color = "turquoise", size = 1) +
geom_vline(aes(xintercept = median(year) + sd(year)), color = "turquoise3", size = 0.5) +
geom_vline(aes(xintercept = median(year) - sd(year)), color = "turquoise3", size = 0.5) +
scale_x_continuous(breaks=seq(1960,2022,5)) +
labs(
title = "Histogram of Article Publication by Year",
subtitle = "From ND to May 2022",
caption = "Data of articles included after title and abstract screening. Vertical lines depict the median and standard deviation.",
x = "Year of article publication",
y = "Count of articles published"
) +
theme_classic()
ggsave("PubbyYear.pdf", width = 8, height = 5)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(Hmisc)
library(dplyr)
library(ggplot2)
library(ggridges) # for ridgeplot
library(viridis)
library(countrycode)
library(maps)
library(extrafont)
library(stringr)        # text cleaning and regular expressions
library(tidytext)       # provides additional text mining functions
library(widyr)
library(igraph) # For network graphs
library(ggraph)
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
# geom_polygon(aes(fill = oil_bbl_per_day, color = as.factor(opec_ind))) +
#  scale_fill_gradient(name="Count of articles", low="aquamarine3", high="midnightblue", na.value="snow4") +
scale_fill_gradientn(colours = c('#461863','#404E88','#2A8A8C','#7FD157','#F9E53F')
,values = scales::rescale(c(0,5,10,15,25, 30))
,labels = comma
,breaks = c(0,5,10,15,25, 30) +
labs(
title = "Map of Included Articles by Country",
subtitle = "Count of articles published by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
# geom_polygon(aes(fill = oil_bbl_per_day, color = as.factor(opec_ind))) +
#  scale_fill_gradient(name="Count of articles", low="aquamarine3", high="midnightblue", na.value="snow4") +
scale_fill_gradientn(colours = c('#461863','#404E88','#2A8A8C','#7FD157','#F9E53F')
,values = scales::rescale(c(0,5,10,15,25, 30))
,labels = comma
,breaks = c(0,5,10,15,25, 30)) +
labs(
title = "Map of Included Articles by Country",
subtitle = "Count of articles published by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=n, x=long, y=lat, group=group)) +
# geom_polygon(aes(fill = oil_bbl_per_day, color = as.factor(opec_ind))) +
#  scale_fill_gradient(name="Count of articles", low="aquamarine3", high="midnightblue", na.value="snow4") +
scale_fill_gradientn(colours = c('#461863','#404E88','#2A8A8C','#7FD157','#F9E53F')
,values = scales::rescale(c(0,5,10,15,25, 30))
,breaks = c(0,5,10,15,25, 30)) +
labs(
title = "Map of Included Articles by Country",
subtitle = "Count of articles published by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
ggsave("PublicationMap.jpeg", width = 8, height = 4)
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=fill=as.factor(n), x=long, y=lat, group=group)) +
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=as.factor(n), x=long, y=lat, group=group)) +
# geom_polygon(aes(fill = oil_bbl_per_day, color = as.factor(opec_ind))) +
#  scale_fill_gradient(name="Count of articles", low="aquamarine3", high="midnightblue", na.value="snow4") +
scale_fill_gradientn(colours = c('#461863','#404E88','#2A8A8C','#7FD157','#F9E53F')
,values = scales::rescale(c(0,5,10,15,25, 30))
,breaks = c(0,5,10,15,25, 30)) +
labs(
title = "Map of Included Articles by Country",
subtitle = "Count of articles published by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
globemap2 <- ggplot() +
geom_polygon(data=mapdata, aes(fill=as.factor(n), x=long, y=lat, group=group)) +
# geom_polygon(aes(fill = oil_bbl_per_day, color = as.factor(opec_ind))) +
#  scale_fill_gradient(name="Count of articles", low="aquamarine3", high="midnightblue", na.value="snow4") +
#  scale_fill_gradientn(colours = c('#461863','#404E88','#2A8A8C','#7FD157','#F9E53F'),values = scales::rescale(c(0,5,10,15,25, 30)) ,breaks = c(0,5,10,15,25, 30)) +
labs(
title = "Map of Included Articles by Country",
subtitle = "Count of articles published by country of first author or corresponding author.",
# caption = "Grey indicates no publications while darker blue shades indicate a higher published count. Publishing country is determined by the first author listed country or corresponding address; whichever was pulled from the database data."
) +
theme_void() +
coord_fixed(1.2) +
theme(plot.title = element_text(size = 12, face = "bold"),
legend.title=element_text(size=10),
legend.text=element_text(size=9))
globemap2
ggsave("PublicationMap.jpeg", width = 8, height = 4)
knitr::opts_chunk$set(echo = TRUE)
# Clean the dataset
abstractscleaned <- abstracts$abstract <- gsub("behav*","behavior",abstracts$abstract)
# Clean the dataset
abstracts$abstract <- gsub("behav*","behavior",abstracts$abstract)
View(abstracts)
# Clean the dataset
# abstracts$abstract <- gsub("behav*","behavior",abstracts$abstract)
abstracts$abstract <- str_replace(abstracts$abstract, "behav*", "behavior")
library(tidyverse)
library(Hmisc)
library(dplyr)
library(ggplot2)
library(ggridges) # for ridgeplot
library(viridis)
library(countrycode)
library(maps)
library(extrafont)
library(stringr)        # text cleaning and regular expressions
library(tidytext)       # provides additional text mining functions
library(widyr)
library(igraph) # For network graphs
library(ggraph)
# Clean the dataset
# abstracts$abstract <- gsub("behav*","behavior",abstracts$abstract)
abstracts$abstract <- str_replace(abstracts$abstract, "behav*", "behavior")
View(abstracts)
# Clean the dataset
# abstracts$abstract <- gsub("behav*","behavior",abstracts$abstract)
abstracts$abstract <- str_replace_all(abstracts$abstract, "behav*", "behavior")
View(abstracts)
# Clean the dataset
# abstracts$abstract <- gsub("behav*","behavior",abstracts$abstract)
abstracts$abstract <- gsub("behav[^ ]*","behavior",abstracts$abstract, ignore.case=TRUE)
# abstracts$abstract <- str_replace_all(abstracts$abstract, "behav*", "behavior")
View(abstracts)
View(abstracts)
View(abstracts)
