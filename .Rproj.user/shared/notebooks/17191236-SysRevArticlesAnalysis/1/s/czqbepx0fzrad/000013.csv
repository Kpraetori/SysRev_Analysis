"0",""
"0","#make sure this is running"
"0","library(tidyverse)"
"0",""
"0","#add a function"
"0","all_country <- countrycode::countryname_dict %>%  # remember the :: specifies the function specific to that package"
"0","                  filter(grepl('[A-Za-z]', country.name.en)) %>% # filter out non-ASCII country names:"
"0","                  pull(country.name.en) %>%  # define column `country.name.alt` as an atomic vector"
"0","                  tolower()"
"0","pattern <- str_c(all_country, collapse = '|')"
"0",""
"0",""
"0","# lets make a new dataset to work with"
"0","locationdata <- tidier2"
"0",""
"0","# remove punctuation"
"0","locationdata$location = gsub(""[[:punct:]\n]"","""", locationdata$location)"
"0",""
"0",""
"0","# some rows were not recognised and so were replaced. Still some weren't recognised and so are manually changed here."
"0","locationdata <- locationdata %>%"
"0","  mutate(location = case_when("
"0","    str_detect(location, ""USA"") ~ ""united states"","
"0","    str_detect(location, ""UK"")  ~ ""united kingdom"","
"0","    str_detect(location, ""England"")  ~ ""united kingdom"","
"0","    str_detect(location, ""korea"")  ~ ""south korea"","
"0","    str_detect(location, ""Berlin"")  ~ ""Germany"","
"0","    str_detect(location, ""Department of Psychiatry and Behavioral Sciences University of Arkansas for Medical Sciences 4301 West Markham Little Rock Arkansas 72205"") ~ ""united states"","
"0","#    str_detect(location, ""College of Veterinary Medicine Seoul National University 1 Gwanakro Gwanakgu Seoul 151742 Korea"") ~ ""republic of korea"","
"0","#    str_detect(location, ""Animal Technology College of Applied Life Science Jeju National University 102 Jejudaehakro Jejusi 63243 Korea Republic"") ~ # ""republic of korea"","
"0","#  str_detect(location, ""Institute of Animal Medicine College of Veterinary Medicine Gyeongsang National University Republic of Korea"
"0","#"") ~ ""republic of korea"","
"0","    TRUE ~ location"
"0","    )"
"0","  )"
"0","#"
"0","#"
"0","# now we make a new table that is expanded so that every country found in the string has its own row, such that two authors = two rows"
"0","locationtwo <- locationdata %>%"
"0","  mutate(country = str_extract_all(tolower(locationdata$location), pattern)) %>%"
"0","  # select(-location) %>%"
"0","  unnest(country, keep_empty = TRUE)"
"0",""
